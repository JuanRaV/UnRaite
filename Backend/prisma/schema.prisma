// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Admin {
  adminUsername String  @id
  password      String
  token         String? @default("")
}

model Driver {
  driverId               String            @id
  name                   String
  email                  String            @unique
  password               String
  phoneNumber            Int               @unique
  frontDriversLicence    String
  backDriversLicence     String
  frontStudentCredential String
  backStudentCredential  String
  verified               Boolean           @default(false)
  token                  String?           @default("")
  strike                 Int?              @default(0)
  raites                 Raite[]
  driverReports          DriverReport[]
  reports                PassengerReport[]
}

model Passenger {
  passengerId            String            @id
  name                   String
  email                  String            @unique
  password               String
  phoneNumber            Int               @unique
  frontStudentCredential String
  backStudentCredential  String
  verified               Boolean           @default(false)
  token                  String?           @default("")
  strike                 Int?              @default(0)
  raite                  PassengerRaite[]
  passangerReports       PassengerReport[]
  reports                DriverReport[]
}

model Raite {
  id               Int               @id @default(autoincrement())
  startHour        String
  date             String
  start            String
  startingPoint    String?
  destination      String
  arrivalPoint     String?
  capacity         Int
  price            Int
  completed        Boolean           @default(false)
  driver           Driver            @relation(fields: [driverId], references: [driverId])
  driverId         String
  passengers       PassengerRaite[]
  passagnerReports PassengerReport[]
  driverReports    DriverReport[]
}

model PassengerRaite {
  passengerId String
  raiteId     Int
  passenger   Passenger @relation(fields: [passengerId], references: [passengerId])
  raite       Raite     @relation(fields: [raiteId], references: [id])

  @@id([passengerId, raiteId])
}

model PassengerReport {
  id                  Int       @id @default(autoincrement())
  raiteId             Int
  reporterPassengerId String
  accusedDriverId     String
  raite               Raite     @relation(fields: [raiteId], references: [id])
  reporterPassenger   Passenger @relation(fields: [reporterPassengerId], references: [passengerId])
  accusedDriver       Driver    @relation(fields: [accusedDriverId], references: [driverId])

  @@index([raiteId])
}

model DriverReport {
  id                 Int       @id @default(autoincrement())
  raiteId            Int
  reporterDriverId   String
  accusedPassengerId String
  raite              Raite     @relation(fields: [raiteId], references: [id])
  reporterDriver     Driver    @relation(fields: [reporterDriverId], references: [driverId])
  accusedPassenger   Passenger @relation(fields: [accusedPassengerId], references: [passengerId])

  @@index([raiteId])
}

model TownToGdl{
  id                 Int       @id @default(autoincrement())
  townName           String
  price              Decimal
}